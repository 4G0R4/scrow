name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Tailwind CSS CLI
      run: |
        curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/latest/download/tailwindcss-linux-x64
        chmod +x tailwindcss-linux-x64
        sudo mv tailwindcss-linux-x64 /usr/local/bin/tailwindcss

    - name: Build Tailwind CSS
      run: tailwindcss -i ./input.css -o ./assets/tailwind.css --minify

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install Dioxus CLI
      run: cargo install dioxus-cli

    - name: Verify Dioxus project structure
      run: |
        echo "=== Checking for required Dioxus files ==="
        if [ -f "Cargo.toml" ]; then
          echo "✓ Cargo.toml found"
          echo "=== Cargo.toml contents ==="
          cat Cargo.toml
        else
          echo "✗ Cargo.toml missing!"
        fi
        echo ""
        if [ -f "src/main.rs" ]; then
          echo "✓ src/main.rs found"
        else
          echo "✗ src/main.rs missing!"
          echo "Looking for other Rust files:"
          find . -name "*.rs" -not -path "./target/*" | head -5
        fi
        echo ""
        if [ -f "Dioxus.toml" ]; then
          echo "✓ Dioxus.toml found"
          echo "=== Dioxus.toml contents ==="
          cat Dioxus.toml
        else
          echo "No Dioxus.toml (using defaults)"
        fi

    - name: Build Dioxus App (Release)
      run: |
        echo "=== Starting Dioxus build ==="
        dx build --release --verbose
        echo "Build exit code: $?"

    - name: Debug - Check build output
      run: |
        echo "=== Current directory contents ==="
        ls -la
        echo "=== Looking for any HTML files ==="
        find . -name "*.html" -not -path "./.git/*" -not -path "./target/*" | head -10
        echo "=== Looking for any WASM files ==="
        find . -name "*.wasm" -not -path "./.git/*" -not -path "./target/*" | head -10
        echo "=== Checking common output directories ==="
        for dir in dist build public out docs; do
          if [ -d "./$dir" ]; then
            echo "Found $dir directory:"
            ls -la ./$dir/
          else
            echo "No $dir directory found"
          fi
        done
        echo "=== Checking dx build output location ==="
        dx --help | grep -A 5 "build"

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
